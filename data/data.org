* Данные в вычислительной машине
:PROPERTIES:
:CUSTOM_ID: данные-в-вычислительной-машине
:END:
** Уровни представления данных
:PROPERTIES:
:CUSTOM_ID: уровни-представления-данных
:END:
- уровень конечного пользователя (предметной области)
- уровень программиста (логический)
- уровень вычислительной машины (физический)

Конечный пользователь имеет возможности и знает правила извлечения
информации из данных.

Часто представление конечных данных пользователю осуществляется
посредством некоторой =виртуальной машины=, которая предоставляет
естественный понятный для пользователя интерфейс.

** Типы данных
:PROPERTIES:
:CUSTOM_ID: типы-данных
:END:
Отличаются:

- операциями, которые можно выполнять над этими данными
- возможными значениям или диапазонами значений
- структурой хранения - выделение памяти, представление типа данных

*Тип данных* -- множество значений и операций над этими значениями

Тип данных указывает:

- сколько памяти выделить для хранения данных

  для любого типа данных в конкретной системе, всегда известен размер
  выделяемой памяти

  Для простейших типов данных выделяется непрерывный фрагмент памяти:
  байт один за другим.

  При создании переменной в программе и присвоение ей значения
  выделяется нужное количество памяти, адрес старшего байта выделенного
  в памяти. Связывается с именем переменной, в дальнейшей используется
  имя.

- на какие поля разбить памяти и как эти поля интерпретировать

- какой диапазон значений может хранится в выделенной памяти

- какие операции допустимы над данными

Все дальнейшие операции ВМ определены для операндов одинакового типа и
результат операции также будет соответствовать типу операндов.

Типы данных можно определить на две группы:

- простейшие (примитивные, базовые)
  - Числовые
    - Операции: +, -, *, /
    - Логические: ==, !=, <, >, \leq, \geq
  - Символьные
    - || -- соединение строк
    - сравнение -
      - лексикографический порядок (на самом деле в unicode, то что
        снизу)
      - по коду внутреннего представления На уровне системы кодируется
        двоичным числом, которое является кодом символа в использованной
        таблице кодировки
  - Логические
  - Адреса
    - +, -, сравнение
- сложные типы данных (составные, структурные)

*** Логический тип данных
:PROPERTIES:
:CUSTOM_ID: логический-тип-данных
:END:
Истина - 1 Ложь - 0

Операции:

- Конъюнкция
- Дизъюнкция
- Инверсия
- Сумма по модулю
- Сравнение на равенство

*** Представление числовых данных в компьютерной системе
:PROPERTIES:
:CUSTOM_ID: представление-числовых-данных-в-компьютерной-системе
:END:
Натуральные числа -- все целые положительные числа

Свойства:

- замкнуты относительно операций сложения и умножения
- сложение и умножение коммутативны и ассоциативны
- вычитание и деления не замкнуты
- умножение дистрибутивно

Целые числа -- множество всех отрицательных и положительных чисел.

Рациональные числа -- числа в виде отношения целого и натурального
чисел, в явном виде рациональные числа в системах программирования
обычно не представлены.

Действительные (вещественные) числа

Расширенные множества рациональных чисел числами, которые не могут быть
получены как отношение целых чисел

**** Способы записи чисел
:PROPERTIES:
:CUSTOM_ID: способы-записи-чисел
:END:
Система счисления -- способ записи чисел с помощью ограниченного набора
символов и совокупность правил (алгоритмов) сопоставления этим записям
реальных значений чисел.

Системы счисления:

- непозиционная - такая в которой значение символа не зависит от его
  позиции в записи числа
- позиционная 126_10 = 6 + 20 + 100 = 6 * 10^0 + 2 * 10^1 + 1*10^2

Наиболее распространены следующие системы счисления:

q = 2

q = 8

q = 10

q = 16

***** Особенности позиционной системы счисления
:PROPERTIES:
:CUSTOM_ID: особенности-позиционной-системы-счисления
:END:
1. Основание системы счисления (далее /ОСС/) всегда натуральное число
   больше 1

2. Для выполнение простых операций, достаточно знать таблицы сложения и
   вычитания

3. В алфавите используемом для записи числа отсутствуют знаки отличные
   от знаков цифр

4. Форма записи числа в позиционной системе счисления ()

\[
x(q) = a_{n-1}q^{n-1} + a_{n-2}q^{n-2} + ... + a_1q_1 + a_0q^0 + a_{-1}q^{-1} + a_{-2}q^{-2} + ... + a_{-m}q^{-m}
\] x(q) - значения числа q - ОСС

a_i, i \in []

q^i - вес i-го разряда

5. [@5] Сдвиг числа на один разряд влево или вправо соответствует
   операциям умножения или деления на основание системы

Многочлен может быть записан в виде схемы Горнера

\[ x(q) = a_0 + q(a_1 + q (a_2 + q(a_3 + ...))) \]
